// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
  id                             String @id @default(uuid())
  name                           String
  imageUrl                       String @db.Text
  email                          String @db.Text
  userId                         String @unique
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt
  
  servers                        Server[]
  members                        Member[]
  channels                       Channel[]
}

model Server {
  id                             String @id @default(uuid())
  name                           String
  imageUrl                       String @db.Text
  inviteCode                     String @db.Text
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt
  
  profileId                      String
  profile                        Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members                        Member[]
  channels                       Channel[]

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id                             String @id @default(uuid())
  role                           MemberRole @default(GUEST)
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt
  
  profileId                      String
  profile                        Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId                       String
  server                         Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id                             String @id @default(uuid())
  type                           ChannelType @default(TEXT)
  name                           String
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt
  
  profileId                      String
  profile                        Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId                       String
  server                         Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}